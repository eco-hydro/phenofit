% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/season.R, R/season_3y.R
\name{season}
\alias{season}
\alias{season_3y}
\alias{stat_season}
\alias{plot_season}
\title{season}
\usage{
season(INPUT, rFUN = wWHIT, wFUN = wTSM, iters = 2, wmin = 0.1,
  lambda, nf = 3, frame = floor(INPUT$nptperyear/5) * 2 + 1,
  minpeakdistance, threshold_max = 0.2, threshold_min = 0.05,
  ypeak_min = 0.1, rytrough_max = 0.6, MaxPeaksPerYear = 2,
  MaxTroughsPerYear = 3, IsPlot = FALSE, plotdat = INPUT,
  print = FALSE, adj.param = TRUE, ...)

season_3y(INPUT, rFUN = wWHIT, wFUN = wTSM, iters = 2, wmin = 0.1,
  lambda = NULL, nf = 3, frame = floor(INPUT$nptperyear/5) * 2 + 1,
  maxExtendMonth = 12, ..., IsPlot = T, plotdat = INPUT,
  print = TRUE, titlestr = "", IsOnlyPlotbad = TRUE)

stat_season(INPUT, brks)

plot_season(INPUT, brks, plotdat, ylu, IsOnlyPlotbad = FALSE)
}
\arguments{
\item{INPUT}{A list object with the elements of 't', 'y', 'w', 'Tn' (option)
and 'ylu', returned by \code{check_input}.}

\item{rFUN}{Coarse curve fitting function, can be one of `wSG`, `wWHIT`
and `wHANTS`.}

\item{wFUN}{weights updating function, can be one of 'wTSM', 'wChen' and
'wBisquare'.}

\item{iters}{How many times curve fitting is implemented.}

\item{wmin}{Double, minimum weigth (i.e. weight of snow, ice and cloud).}

\item{lambda}{the smoothing parameter of \code{wWHIT}. For 'season_3y', if
lambda is null, \code{initial_lambda} will be used.}

\item{nf}{the parameter of \code{wHANTS}, number of frequencies to be
considered above the zero frequency}

\item{frame}{the parameter of \code{sgfitw}, moving window size. Suggested by
TIMESAT, default frame = floor(nptperyear/7)*2 + 1.}

\item{minpeakdistance}{In the unit of points. The minimum distance
(in indices) peaks have to have to be counted. If the distance of two
maximum extreme value less than `minpeakdistance`, only the real maximum
value will be left.}

\item{threshold_max}{Similar as `threshold_min`, The maximum threshold should
be greater than `threshold_max`.}

\item{threshold_min}{Threshold is defined as the difference of peak value with
trough value. There are two threshold (left and right). The minimum threshold
should be greater than threshold_min.}

\item{ypeak_min}{ypeak >= ypeak_min}

\item{rytrough_max}{ytrough <= rytrough_max*A, A is the amplitude of y.}

\item{MaxPeaksPerYear}{This parameter is used to adjust lambda in iterations.
If PeaksPerYear > MaxPeaksPerYear, then lambda = lambda*2.}

\item{MaxTroughsPerYear}{This parameter is used to adjust lambda in iterations.
If TroughsPerYear > MaxTroughsPerYear, then lambda = lambda*2.}

\item{IsPlot}{Boolean}

\item{plotdat}{A list or data.table, with 't', 'y' and 'w'. Only if
IsPlot=true, plotdata will be used to plot. Known that y and w in \code{INPUT}
have been changed, we suggest using the original data.table.}

\item{print}{Whether to print progress information}

\item{adj.param}{Adjust rough curve fitting function parameters automatically, 
if too many or to less peak and trough values.}

\item{...}{Other parameters passed to findpeaks}

\item{titlestr}{string for title}

\item{IsOnlyPlotbad}{If true, only plot partial figures whose NSE < 0.3}

\item{south}{Boolean. In south hemisphere, growing year is 1 July to the
following year 31 June; In north hemisphere, growing year is 1 Jan to 31 Dec.}

\item{ny_extend}{Integer,including previous and subsequent `ny_extend` year
to divding growing season.}

\item{...}{For 'season_3y', Other parameters passed to `season`;
For `season`, other parameters passed to findpeaks.}
}
\value{
A list object with the elements of 'fit' and 'dt'.
list(dt, di)
$whit

List object, list(whit, dt, stat)
}
\description{
First smooth VI timeseries by rought curve fitting function (rFUN), then use
findpeak function to get the local maximum and local minimum values.
Two local minimum defined a growing season. If two local minimum(maximum)
are too closed, then only the smaller(biger) is left.

Before using `season_3y`, INPUT should be added a year in the head and tail
first by \code{add_HeadTail}.
}
\details{
Then according to season pos, based to local maximum position divide yearly
growing season. lambda need to set carefully.
}
