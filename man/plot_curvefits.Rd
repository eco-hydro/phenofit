% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_curvefits.R
\name{plot_curvefits}
\alias{plot_curvefits}
\title{plot_curvefits}
\usage{
plot_curvefits(
  d_fit,
  seasons,
  d_obs = NULL,
  title = NULL,
  xlab = "Time",
  ylab = "Vegetation Index",
  yticks = NULL,
  font.size = 14,
  theme = NULL,
  cex = 2,
  shape = "point",
  angle = 30,
  show.legend = TRUE
)
}
\arguments{
\item{d_fit}{data.frame of curve fittings returned by \code{\link[=get_fitting]{get_fitting()}}.}

\item{seasons}{Growing season dividing object returned by \code{\link[=season]{season()}}
and \code{\link[=season_mov]{season_mov()}}.}

\item{d_obs}{data.frame of original vegetation time series, with the columns
of \code{t}, \code{y} and \code{QC_flag}. If not specified, it will be determined from \code{d_fit}.}

\item{title}{String, title of figure.}

\item{xlab, ylab}{String, title of \code{xlab} and \code{ylab}.}

\item{yticks}{ticks of y axis}

\item{font.size}{Font size of axis.text}

\item{theme}{ggplot theme to be applied}

\item{cex}{point size for VI observation.}

\item{shape}{the shape of input VI observation? \code{line} or \code{point}}

\item{angle}{\code{text.x} angle}

\item{show.legend}{Boolean}
}
\description{
plot_curvefits
}
\examples{
library(phenofit)
data("MOD13A1")

df <- tidy_MOD13(MOD13A1$dt)
st <- MOD13A1$st

date_start <- as.Date('2013-01-01')
date_end   <- as.Date('2016-12-31')

sitename <- 'CA-NS6' # df$site[1]
d     <- df[site == sitename & (date >= date_start & date <= date_end), ]
sp    <- st[site == sitename, ]
south <- sp$lat < 0
nptperyear <- 23

# global parameter
IsPlot = TRUE
print  = FALSE
ypeak_min  = 0.05
wFUN = wTSM

# add one year in head and tail
# d     <- add_HeadTail(d, south = south, nptperyear = nptperyear) 
INPUT    <- check_input(d$t, d$y, d$w, QC_flag = d$QC_flag,
     nptperyear = nptperyear, south = south, 
     maxgap = nptperyear/4, alpha = 0.02, wmin = 0.2)
# Rough fitting and growing season dividing
brks2 <- season_mov(INPUT,
    rFUN = smooth_wWHIT, wFUN = wFUN,
    plotdat = d, IsPlot = IsPlot, IsPlot.OnlyBad = FALSE)
# Fine fitting
fit <- curvefits(
    INPUT, brks2,
    methods = c("AG", "Beck", "Elmore", "Zhang"), #,"klos", "Gu"
    wFUN = wFUN,
    nextend = 2, maxExtendMonth = 2, minExtendMonth = 1, minPercValid = 0.2)
## visualization
df_fit <- get_fitting(fit)
g <- plot_curvefits(df_fit, brks2)
grid::grid.newpage(); grid::grid.draw(g)
}
