% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_input.R
\name{check_input}
\alias{check_input}
\title{check_input}
\usage{
check_input(t, y, w, nptperyear, Tn = NULL, wmin = 0.2, missval,
  maxgap, alpha = 0.01, ...)
}
\arguments{
\item{t}{Numeric vector, \code{Date} variable}

\item{y}{Numeric vector, vegetation index time-series}

\item{w}{Numeric vector, weights of \code{y}}

\item{nptperyear}{Integer, number of images per year}

\item{Tn}{Numeric vector, night temperature, default is null. If provided,
Tn is used to help divide ungrowing period, and then get background value in
ungrowing season (see details in \code{\link[phenofit]{backval}}).}

\item{wmin}{Double, minimum weigth (i.e. weight of snow, ice and cloud).}

\item{missval}{Double, which is used to replace NA values in y. If missing,
the default vlaue is \code{ylu[1]}.}

\item{maxgap}{Integer, nptperyear/4 will be a suitable value. If continuous
missing value numbers less than maxgap, then interpolate those NA values by
zoo::na.approx; If false, then replace those NA values with a constant value
\code{ylu[1]}. \cr
Replacing NA values with a constant missing value (e.g. background value ymin)
is inappropriate for middle growing season points. Interpolating all values
by na.approx, it is unsuitable for large number continous missing segments,
e.g. in the start or end of growing season.}

\item{alpha}{Double value in [0,1], quantile prob of ylu_min.}

\item{...}{Others will be ignored.}
}
\value{
A list object returned
\itemize{
\item{y} Numeric vector
\item{t} Numeric vector
\item{w} Numeric vector
\item{Tn} Numeric vector
\item{ylu} =[ymin, ymax]. \code{w_critical} is used to filter not too
     bad values. If the percentage good values (w=1) is greater than 30\%, then
     \code{w_critical}=1. The else, if the percentage of w >= 0.5 points is greater
     than 10\%, then \code{w_critical}=0.5. In boreal regions, even if the percentage
     of w >= 0.5 points is only 10\%, we still can't set \code{w_critical=wmin}.
     We can't rely on points with the wmin weights. Then,
     \code{y_good = y[w >= w_critical ]},
     \code{ymin = pmax( quantile(y_good, alpha/2), 0)}, \code{ymax = max(y_good)}.
}
}
\description{
Check input data, interpolate NA values in y, remove spike values, and set
weights for NA in y and w.
}
\seealso{
\code{\link[phenofit]{backval}}
}
